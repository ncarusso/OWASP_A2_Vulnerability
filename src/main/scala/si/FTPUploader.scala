package si


import java.io._

import org.apache.commons.net.PrintCommandListener
import org.apache.commons.net.ftp.{FTP, FTPReply, FTPClient}


class FTPUploader {
  var ftp: FTPClient = null

  @throws(classOf[Exception])
  def this(host: String, user: String, pwd: String) {
    this()
    ftp = new FTPClient
    ftp.addProtocolCommandListener(new PrintCommandListener(new PrintWriter(System.out)))
    var reply: Int = 0
    ftp.connect(host)
    reply = ftp.getReplyCode
    if (!FTPReply.isPositiveCompletion(reply)) {
      ftp.disconnect
      throw new Exception("Exception in connecting to FTP Server")
    }
    ftp.login(user, pwd)
    ftp.setFileType(FTP.BINARY_FILE_TYPE)
  }

  @throws(classOf[Exception])
  def uploadFile(localFileFullName: String, fileName: String, hostDir: String) {
    try {
      val input: InputStream = new FileInputStream(new File(localFileFullName))
      try {
        this.ftp.storeFile(hostDir + fileName, input)
      } finally {
        if (input != null) input.close()
      }
    }
  }

  def disconnect {
    if (this.ftp.isConnected) {
      try {
        this.ftp.logout
        this.ftp.disconnect
      }
      catch {
        case f: IOException => {
        }
      }
    }
  }
}
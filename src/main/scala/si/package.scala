import java.io.File
import scala.sys.process._
import scala.util.Try

// Funciones Auxiliares
package object si {

  def getListOfFiles(dir: String): List[File] = {
    val d = new File(dir)
    if (d.exists() && d.isDirectory) {
      d.listFiles.filter(_.isFile).toList
    } else {
      List[File]()
    }
  }

  def getListOfSubDirectories(dir: File): List[String] = {
    dir.listFiles.
      filter(_.isDirectory).
      map(_.getName).
      toList
  }


  def obtenerLinux: Try[String] = Try(Seq("bash","-c","uname").!!)
  def obtenerWindows: Try[String] = Try(Seq("cmd","ver").!!)

  def getSO: SO = {
    (obtenerLinux orElse obtenerWindows) getOrElse("Error") match {
      case "Linux" => Linux
      case "Windows" => Windows
    }
  }

}
